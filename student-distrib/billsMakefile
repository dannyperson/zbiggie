
# Makefile for OS project
# To build, first `make dep`, them `make`. Everything should be automatic.
# Will compile all *.c and *.S files in the current directory.


# Flags to use when compiling, preprocessing, assembling, and linking
CFLAGS 	+= -Wall -fno-builtin -fno-stack-protector -nostdlib -ggdb -m32
ASFLAGS += -m32
LDFLAGS += -nostdlib -static -ggdb -m32
UNAME := $(shell uname)

ifeq ($(UNAME), Linux)
CC=gcc
endif
ifeq ($(UNAME), Darwin)
CC=i386-elf-gcc
endif

#If you have any .h files in another directory, add -I<dir> to this line
CPPFLAGS +=-nostdinc -ggdb

# This generates the list of source files
SRC =  $(wildcard *.S) $(wildcard *.c)

# This generates the list of .o files. The order matters, boot.o must be first
OBJS  = boot.o
OBJS += $(filter-out boot.o,$(patsubst %.S,%.o,$(filter %.S,$(SRC))))
OBJS += $(patsubst %.c,%.o,$(filter %.c,$(SRC)))


bootimg: billsMakefile $(OBJS)
	$(CC) $(LDFLAGS) $(OBJS) -Ttext=0x400000 -o bootimg
	./make_img.sh

dep: billsMakefile.dep

billsMakefile.dep: $(SRC)
	$(CC) -MM $(CPPFLAGS) $(SRC) > $@

.PHONY: clean
clean:
	rm -f *.o billsMakefile.dep bootimg new_mp3.img

ifneq ($(MAKECMDGOALS),dep)
ifneq ($(MAKECMDGOALS),clean)
include billsMakefile.dep
endif
endif
